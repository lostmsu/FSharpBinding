<FSharpFormattingPolicy scope="text/x-fsharp">
	<IndentNamespaceBody>True</IndentNamespaceBody>
	<IndentClassBody>True</IndentClassBody>
	<IndentInterfaceBody>True</IndentInterfaceBody>
	<IndentStructBody>True</IndentStructBody>
	<IndentEnumBody>True</IndentEnumBody>
	<IndentMethodBody>True</IndentMethodBody>
	<IndentPropertyBody>True</IndentPropertyBody>
	<IndentEventBody>True</IndentEventBody>
	<IndentBlocks>True</IndentBlocks>
	<IndentSwitchBody>False</IndentSwitchBody>
	<IndentCaseBody>True</IndentCaseBody>
	<IndentBreakStatements>True</IndentBreakStatements>
	<NamespaceBraceStyle>NextLine</NamespaceBraceStyle>
	<ClassBraceStyle>NextLine</ClassBraceStyle>
	<InterfaceBraceStyle>NextLine</InterfaceBraceStyle>
	<StructBraceStyle>NextLine</StructBraceStyle>
	<EnumBraceStyle>NextLine</EnumBraceStyle>
	<MethodBraceStyle>NextLine</MethodBraceStyle>
	<ConstructorBraceStyle>NextLine</ConstructorBraceStyle>
	<DestructorBraceStyle>NextLine</DestructorBraceStyle>
	<PropertyBraceStyle>EndOfLine</PropertyBraceStyle>
	<PropertyGetBraceStyle>EndOfLine</PropertyGetBraceStyle>
	<PropertySetBraceStyle>EndOfLine</PropertySetBraceStyle>
	<AllowPropertyGetBlockInline>True</AllowPropertyGetBlockInline>
	<AllowPropertySetBlockInline>True</AllowPropertySetBlockInline>
	<EventBraceStyle>EndOfLine</EventBraceStyle>
	<EventAddBraceStyle>EndOfLine</EventAddBraceStyle>
	<EventRemoveBraceStyle>EndOfLine</EventRemoveBraceStyle>
	<AllowEventAddBlockInline>True</AllowEventAddBlockInline>
	<AllowEventRemoveBlockInline>True</AllowEventRemoveBlockInline>
	<StatementBraceStyle>EndOfLine</StatementBraceStyle>
	<PlaceElseOnNewLine>False</PlaceElseOnNewLine>
	<PlaceCatchOnNewLine>False</PlaceCatchOnNewLine>
	<PlaceFinallyOnNewLine>False</PlaceFinallyOnNewLine>
	<PlaceWhileOnNewLine>False</PlaceWhileOnNewLine>
	<BeforeMethodCallParentheses>True</BeforeMethodCallParentheses>
	<BeforeMethodDeclarationParentheses>True</BeforeMethodDeclarationParentheses>
	<IfParentheses>True</IfParentheses>
	<WhileParentheses>True</WhileParentheses>
	<ForParentheses>True</ForParentheses>
	<ForeachParentheses>True</ForeachParentheses>
	<CatchParentheses>True</CatchParentheses>
	<SwitchParentheses>True</SwitchParentheses>
	<LockParentheses>True</LockParentheses>
	<UsingParentheses>True</UsingParentheses>
	<AroundAssignmentParentheses>True</AroundAssignmentParentheses>
	<AroundLogicalOperatorParentheses>True</AroundLogicalOperatorParentheses>
	<AroundEqualityOperatorParentheses>True</AroundEqualityOperatorParentheses>
	<AroundRelationalOperatorParentheses>True</AroundRelationalOperatorParentheses>
	<AroundBitwiseOperatorParentheses>True</AroundBitwiseOperatorParentheses>
	<AroundAdditiveOperatorParentheses>True</AroundAdditiveOperatorParentheses>
	<AroundMultiplicativeOperatorParentheses>True</AroundMultiplicativeOperatorParentheses>
	<AroundShiftOperatorParentheses>True</AroundShiftOperatorParentheses>
	<WithinParentheses>False</WithinParentheses>
	<WithinMethodCallParentheses>False</WithinMethodCallParentheses>
	<WithinMethodDeclarationParentheses>False</WithinMethodDeclarationParentheses>
	<WithinIfParentheses>False</WithinIfParentheses>
	<WithinWhileParentheses>False</WithinWhileParentheses>
	<WithinForParentheses>False</WithinForParentheses>
	<WithinForEachParentheses>False</WithinForEachParentheses>
	<WithinCatchParentheses>False</WithinCatchParentheses>
	<WithinSwitchParentheses>False</WithinSwitchParentheses>
	<WithinLockParentheses>False</WithinLockParentheses>
	<WithinUsingParentheses>False</WithinUsingParentheses>
	<WithinCastParentheses>False</WithinCastParentheses>
	<WithinSizeOfParentheses>False</WithinSizeOfParentheses>
	<WithinTypeOfParentheses>False</WithinTypeOfParentheses>
	<WithinCheckedExpressionParantheses>False</WithinCheckedExpressionParantheses>
	<ConditionalOperatorBeforeConditionSpace>True</ConditionalOperatorBeforeConditionSpace>
	<ConditionalOperatorAfterConditionSpace>True</ConditionalOperatorAfterConditionSpace>
	<ConditionalOperatorBeforeSeparatorSpace>True</ConditionalOperatorBeforeSeparatorSpace>
	<ConditionalOperatorAfterSeparatorSpace>True</ConditionalOperatorAfterSeparatorSpace>
	<SpacesWithinBrackets>False</SpacesWithinBrackets>
	<SpacesAfterComma>True</SpacesAfterComma>
	<SpacesBeforeComma>False</SpacesBeforeComma>
	<SpacesAfterSemicolon>True</SpacesAfterSemicolon>
	<SpacesAfterTypecast>False</SpacesAfterTypecast>
</FSharpFormattingPolicy>
